/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DatabaseListRelationFilter } from "../../database/base/DatabaseListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DataEnrichmentListRelationFilter } from "../../dataEnrichment/base/DataEnrichmentListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumFileStatus } from "./EnumFileStatus";

@InputType()
class FileWhereInput {
  @ApiProperty({
    required: false,
    type: () => DatabaseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DatabaseListRelationFilter)
  @IsOptional()
  @Field(() => DatabaseListRelationFilter, {
    nullable: true,
  })
  databases?: DatabaseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DataEnrichmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DataEnrichmentListRelationFilter)
  @IsOptional()
  @Field(() => DataEnrichmentListRelationFilter, {
    nullable: true,
  })
  dataEnrichments?: DataEnrichmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  filecontent?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  filename?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumFileStatus,
  })
  @IsEnum(EnumFileStatus)
  @IsOptional()
  @Field(() => EnumFileStatus, {
    nullable: true,
  })
  status?: "Option1";
}

export { FileWhereInput as FileWhereInput };
